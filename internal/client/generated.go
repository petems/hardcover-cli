// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package client

import (
	"context"
	"encoding/json"
	"fmt"

	"github.com/Khan/genqlient/graphql"
)

// GetBookBook includes the requested fields of the GraphQL type Book.
type GetBookBook struct {
	Id                  string                                      `json:"id"`
	Title               string                                      `json:"title"`
	Description         string                                      `json:"description"`
	Slug                string                                      `json:"slug"`
	Isbn                string                                      `json:"isbn"`
	PublicationYear     int                                         `json:"publicationYear"`
	PageCount           int                                         `json:"pageCount"`
	Cached_contributors []GetBookBookCached_contributorsContributor `json:"cached_contributors"`
	Cached_genres       []GetBookBookCached_genresGenre             `json:"cached_genres"`
	Image               string                                      `json:"image"`
	AverageRating       float64                                     `json:"averageRating"`
	RatingsCount        int                                         `json:"ratingsCount"`
	CreatedAt           string                                      `json:"createdAt"`
	UpdatedAt           string                                      `json:"updatedAt"`
}

// GetId returns GetBookBook.Id, and is useful for accessing the field via an interface.
func (v *GetBookBook) GetId() string { return v.Id }

// GetTitle returns GetBookBook.Title, and is useful for accessing the field via an interface.
func (v *GetBookBook) GetTitle() string { return v.Title }

// GetDescription returns GetBookBook.Description, and is useful for accessing the field via an interface.
func (v *GetBookBook) GetDescription() string { return v.Description }

// GetSlug returns GetBookBook.Slug, and is useful for accessing the field via an interface.
func (v *GetBookBook) GetSlug() string { return v.Slug }

// GetIsbn returns GetBookBook.Isbn, and is useful for accessing the field via an interface.
func (v *GetBookBook) GetIsbn() string { return v.Isbn }

// GetPublicationYear returns GetBookBook.PublicationYear, and is useful for accessing the field via an interface.
func (v *GetBookBook) GetPublicationYear() int { return v.PublicationYear }

// GetPageCount returns GetBookBook.PageCount, and is useful for accessing the field via an interface.
func (v *GetBookBook) GetPageCount() int { return v.PageCount }

// GetCached_contributors returns GetBookBook.Cached_contributors, and is useful for accessing the field via an interface.
func (v *GetBookBook) GetCached_contributors() []GetBookBookCached_contributorsContributor {
	return v.Cached_contributors
}

// GetCached_genres returns GetBookBook.Cached_genres, and is useful for accessing the field via an interface.
func (v *GetBookBook) GetCached_genres() []GetBookBookCached_genresGenre { return v.Cached_genres }

// GetImage returns GetBookBook.Image, and is useful for accessing the field via an interface.
func (v *GetBookBook) GetImage() string { return v.Image }

// GetAverageRating returns GetBookBook.AverageRating, and is useful for accessing the field via an interface.
func (v *GetBookBook) GetAverageRating() float64 { return v.AverageRating }

// GetRatingsCount returns GetBookBook.RatingsCount, and is useful for accessing the field via an interface.
func (v *GetBookBook) GetRatingsCount() int { return v.RatingsCount }

// GetCreatedAt returns GetBookBook.CreatedAt, and is useful for accessing the field via an interface.
func (v *GetBookBook) GetCreatedAt() string { return v.CreatedAt }

// GetUpdatedAt returns GetBookBook.UpdatedAt, and is useful for accessing the field via an interface.
func (v *GetBookBook) GetUpdatedAt() string { return v.UpdatedAt }

// GetBookBookCached_contributorsContributor includes the requested fields of the GraphQL type Contributor.
type GetBookBookCached_contributorsContributor struct {
	Name string `json:"name"`
	Role string `json:"role"`
}

// GetName returns GetBookBookCached_contributorsContributor.Name, and is useful for accessing the field via an interface.
func (v *GetBookBookCached_contributorsContributor) GetName() string { return v.Name }

// GetRole returns GetBookBookCached_contributorsContributor.Role, and is useful for accessing the field via an interface.
func (v *GetBookBookCached_contributorsContributor) GetRole() string { return v.Role }

// GetBookBookCached_genresGenre includes the requested fields of the GraphQL type Genre.
type GetBookBookCached_genresGenre struct {
	Name string `json:"name"`
}

// GetName returns GetBookBookCached_genresGenre.Name, and is useful for accessing the field via an interface.
func (v *GetBookBookCached_genresGenre) GetName() string { return v.Name }

// GetBookResponse is returned by GetBook on success.
type GetBookResponse struct {
	Book GetBookBook `json:"book"`
}

// GetBook returns GetBookResponse.Book, and is useful for accessing the field via an interface.
func (v *GetBookResponse) GetBook() GetBookBook { return v.Book }

// GetCurrentUserMeUser includes the requested fields of the GraphQL type User.
type GetCurrentUserMeUser struct {
	Id        string `json:"id"`
	Username  string `json:"username"`
	Email     string `json:"email"`
	CreatedAt string `json:"createdAt"`
	UpdatedAt string `json:"updatedAt"`
}

// GetId returns GetCurrentUserMeUser.Id, and is useful for accessing the field via an interface.
func (v *GetCurrentUserMeUser) GetId() string { return v.Id }

// GetUsername returns GetCurrentUserMeUser.Username, and is useful for accessing the field via an interface.
func (v *GetCurrentUserMeUser) GetUsername() string { return v.Username }

// GetEmail returns GetCurrentUserMeUser.Email, and is useful for accessing the field via an interface.
func (v *GetCurrentUserMeUser) GetEmail() string { return v.Email }

// GetCreatedAt returns GetCurrentUserMeUser.CreatedAt, and is useful for accessing the field via an interface.
func (v *GetCurrentUserMeUser) GetCreatedAt() string { return v.CreatedAt }

// GetUpdatedAt returns GetCurrentUserMeUser.UpdatedAt, and is useful for accessing the field via an interface.
func (v *GetCurrentUserMeUser) GetUpdatedAt() string { return v.UpdatedAt }

// GetCurrentUserResponse is returned by GetCurrentUser on success.
type GetCurrentUserResponse struct {
	Me GetCurrentUserMeUser `json:"me"`
}

// GetMe returns GetCurrentUserResponse.Me, and is useful for accessing the field via an interface.
func (v *GetCurrentUserResponse) GetMe() GetCurrentUserMeUser { return v.Me }

// SearchBooksResponse is returned by SearchBooks on success.
type SearchBooksResponse struct {
	Search SearchBooksSearchSearchResults `json:"-"`
}

// GetSearch returns SearchBooksResponse.Search, and is useful for accessing the field via an interface.
func (v *SearchBooksResponse) GetSearch() SearchBooksSearchSearchResults { return v.Search }

func (v *SearchBooksResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*SearchBooksResponse
		Search json.RawMessage `json:"search"`
		graphql.NoUnmarshalJSON
	}
	firstPass.SearchBooksResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Search
		src := firstPass.Search
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalSearchBooksSearchSearchResults(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal SearchBooksResponse.Search: %w", err)
			}
		}
	}
	return nil
}

type __premarshalSearchBooksResponse struct {
	Search json.RawMessage `json:"search"`
}

func (v *SearchBooksResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *SearchBooksResponse) __premarshalJSON() (*__premarshalSearchBooksResponse, error) {
	var retval __premarshalSearchBooksResponse

	{

		dst := &retval.Search
		src := v.Search
		var err error
		*dst, err = __marshalSearchBooksSearchSearchResults(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal SearchBooksResponse.Search: %w", err)
		}
	}
	return &retval, nil
}

// SearchBooksSearchAuthorSearchResults includes the requested fields of the GraphQL type AuthorSearchResults.
type SearchBooksSearchAuthorSearchResults struct {
	Typename string `json:"__typename"`
}

// GetTypename returns SearchBooksSearchAuthorSearchResults.Typename, and is useful for accessing the field via an interface.
func (v *SearchBooksSearchAuthorSearchResults) GetTypename() string { return v.Typename }

// SearchBooksSearchBookSearchResults includes the requested fields of the GraphQL type BookSearchResults.
type SearchBooksSearchBookSearchResults struct {
	Typename   string                                          `json:"__typename"`
	TotalCount int                                             `json:"totalCount"`
	Results    []SearchBooksSearchBookSearchResultsResultsBook `json:"results"`
}

// GetTypename returns SearchBooksSearchBookSearchResults.Typename, and is useful for accessing the field via an interface.
func (v *SearchBooksSearchBookSearchResults) GetTypename() string { return v.Typename }

// GetTotalCount returns SearchBooksSearchBookSearchResults.TotalCount, and is useful for accessing the field via an interface.
func (v *SearchBooksSearchBookSearchResults) GetTotalCount() int { return v.TotalCount }

// GetResults returns SearchBooksSearchBookSearchResults.Results, and is useful for accessing the field via an interface.
func (v *SearchBooksSearchBookSearchResults) GetResults() []SearchBooksSearchBookSearchResultsResultsBook {
	return v.Results
}

// SearchBooksSearchBookSearchResultsResultsBook includes the requested fields of the GraphQL type Book.
type SearchBooksSearchBookSearchResultsResultsBook struct {
	Id                  string                                                                        `json:"id"`
	Title               string                                                                        `json:"title"`
	Slug                string                                                                        `json:"slug"`
	Isbn                string                                                                        `json:"isbn"`
	PublicationYear     int                                                                           `json:"publicationYear"`
	PageCount           int                                                                           `json:"pageCount"`
	Cached_contributors []SearchBooksSearchBookSearchResultsResultsBookCached_contributorsContributor `json:"cached_contributors"`
	Cached_genres       []SearchBooksSearchBookSearchResultsResultsBookCached_genresGenre             `json:"cached_genres"`
	Image               string                                                                        `json:"image"`
	AverageRating       float64                                                                       `json:"averageRating"`
	RatingsCount        int                                                                           `json:"ratingsCount"`
}

// GetId returns SearchBooksSearchBookSearchResultsResultsBook.Id, and is useful for accessing the field via an interface.
func (v *SearchBooksSearchBookSearchResultsResultsBook) GetId() string { return v.Id }

// GetTitle returns SearchBooksSearchBookSearchResultsResultsBook.Title, and is useful for accessing the field via an interface.
func (v *SearchBooksSearchBookSearchResultsResultsBook) GetTitle() string { return v.Title }

// GetSlug returns SearchBooksSearchBookSearchResultsResultsBook.Slug, and is useful for accessing the field via an interface.
func (v *SearchBooksSearchBookSearchResultsResultsBook) GetSlug() string { return v.Slug }

// GetIsbn returns SearchBooksSearchBookSearchResultsResultsBook.Isbn, and is useful for accessing the field via an interface.
func (v *SearchBooksSearchBookSearchResultsResultsBook) GetIsbn() string { return v.Isbn }

// GetPublicationYear returns SearchBooksSearchBookSearchResultsResultsBook.PublicationYear, and is useful for accessing the field via an interface.
func (v *SearchBooksSearchBookSearchResultsResultsBook) GetPublicationYear() int {
	return v.PublicationYear
}

// GetPageCount returns SearchBooksSearchBookSearchResultsResultsBook.PageCount, and is useful for accessing the field via an interface.
func (v *SearchBooksSearchBookSearchResultsResultsBook) GetPageCount() int { return v.PageCount }

// GetCached_contributors returns SearchBooksSearchBookSearchResultsResultsBook.Cached_contributors, and is useful for accessing the field via an interface.
func (v *SearchBooksSearchBookSearchResultsResultsBook) GetCached_contributors() []SearchBooksSearchBookSearchResultsResultsBookCached_contributorsContributor {
	return v.Cached_contributors
}

// GetCached_genres returns SearchBooksSearchBookSearchResultsResultsBook.Cached_genres, and is useful for accessing the field via an interface.
func (v *SearchBooksSearchBookSearchResultsResultsBook) GetCached_genres() []SearchBooksSearchBookSearchResultsResultsBookCached_genresGenre {
	return v.Cached_genres
}

// GetImage returns SearchBooksSearchBookSearchResultsResultsBook.Image, and is useful for accessing the field via an interface.
func (v *SearchBooksSearchBookSearchResultsResultsBook) GetImage() string { return v.Image }

// GetAverageRating returns SearchBooksSearchBookSearchResultsResultsBook.AverageRating, and is useful for accessing the field via an interface.
func (v *SearchBooksSearchBookSearchResultsResultsBook) GetAverageRating() float64 {
	return v.AverageRating
}

// GetRatingsCount returns SearchBooksSearchBookSearchResultsResultsBook.RatingsCount, and is useful for accessing the field via an interface.
func (v *SearchBooksSearchBookSearchResultsResultsBook) GetRatingsCount() int { return v.RatingsCount }

// SearchBooksSearchBookSearchResultsResultsBookCached_contributorsContributor includes the requested fields of the GraphQL type Contributor.
type SearchBooksSearchBookSearchResultsResultsBookCached_contributorsContributor struct {
	Name string `json:"name"`
	Role string `json:"role"`
}

// GetName returns SearchBooksSearchBookSearchResultsResultsBookCached_contributorsContributor.Name, and is useful for accessing the field via an interface.
func (v *SearchBooksSearchBookSearchResultsResultsBookCached_contributorsContributor) GetName() string {
	return v.Name
}

// GetRole returns SearchBooksSearchBookSearchResultsResultsBookCached_contributorsContributor.Role, and is useful for accessing the field via an interface.
func (v *SearchBooksSearchBookSearchResultsResultsBookCached_contributorsContributor) GetRole() string {
	return v.Role
}

// SearchBooksSearchBookSearchResultsResultsBookCached_genresGenre includes the requested fields of the GraphQL type Genre.
type SearchBooksSearchBookSearchResultsResultsBookCached_genresGenre struct {
	Name string `json:"name"`
}

// GetName returns SearchBooksSearchBookSearchResultsResultsBookCached_genresGenre.Name, and is useful for accessing the field via an interface.
func (v *SearchBooksSearchBookSearchResultsResultsBookCached_genresGenre) GetName() string {
	return v.Name
}

// SearchBooksSearchSearchResults includes the requested fields of the GraphQL interface SearchResults.
//
// SearchBooksSearchSearchResults is implemented by the following types:
// SearchBooksSearchAuthorSearchResults
// SearchBooksSearchBookSearchResults
// SearchBooksSearchUserSearchResults
type SearchBooksSearchSearchResults interface {
	implementsGraphQLInterfaceSearchBooksSearchSearchResults()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *SearchBooksSearchAuthorSearchResults) implementsGraphQLInterfaceSearchBooksSearchSearchResults() {
}
func (v *SearchBooksSearchBookSearchResults) implementsGraphQLInterfaceSearchBooksSearchSearchResults() {
}
func (v *SearchBooksSearchUserSearchResults) implementsGraphQLInterfaceSearchBooksSearchSearchResults() {
}

func __unmarshalSearchBooksSearchSearchResults(b []byte, v *SearchBooksSearchSearchResults) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "AuthorSearchResults":
		*v = new(SearchBooksSearchAuthorSearchResults)
		return json.Unmarshal(b, *v)
	case "BookSearchResults":
		*v = new(SearchBooksSearchBookSearchResults)
		return json.Unmarshal(b, *v)
	case "UserSearchResults":
		*v = new(SearchBooksSearchUserSearchResults)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing SearchResults.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for SearchBooksSearchSearchResults: "%v"`, tn.TypeName)
	}
}

func __marshalSearchBooksSearchSearchResults(v *SearchBooksSearchSearchResults) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *SearchBooksSearchAuthorSearchResults:
		typename = "AuthorSearchResults"

		result := struct {
			TypeName string `json:"__typename"`
			*SearchBooksSearchAuthorSearchResults
		}{typename, v}
		return json.Marshal(result)
	case *SearchBooksSearchBookSearchResults:
		typename = "BookSearchResults"

		result := struct {
			TypeName string `json:"__typename"`
			*SearchBooksSearchBookSearchResults
		}{typename, v}
		return json.Marshal(result)
	case *SearchBooksSearchUserSearchResults:
		typename = "UserSearchResults"

		result := struct {
			TypeName string `json:"__typename"`
			*SearchBooksSearchUserSearchResults
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for SearchBooksSearchSearchResults: "%T"`, v)
	}
}

// SearchBooksSearchUserSearchResults includes the requested fields of the GraphQL type UserSearchResults.
type SearchBooksSearchUserSearchResults struct {
	Typename string `json:"__typename"`
}

// GetTypename returns SearchBooksSearchUserSearchResults.Typename, and is useful for accessing the field via an interface.
func (v *SearchBooksSearchUserSearchResults) GetTypename() string { return v.Typename }

// __GetBookInput is used internally by genqlient
type __GetBookInput struct {
	Id string `json:"id"`
}

// GetId returns __GetBookInput.Id, and is useful for accessing the field via an interface.
func (v *__GetBookInput) GetId() string { return v.Id }

// __SearchBooksInput is used internally by genqlient
type __SearchBooksInput struct {
	Query string `json:"query"`
}

// GetQuery returns __SearchBooksInput.Query, and is useful for accessing the field via an interface.
func (v *__SearchBooksInput) GetQuery() string { return v.Query }

// The query executed by GetBook.
const GetBook_Operation = `
query GetBook ($id: ID!) {
	book(id: $id) {
		id
		title
		description
		slug
		isbn
		publicationYear
		pageCount
		cached_contributors {
			name
			role
		}
		cached_genres {
			name
		}
		image
		averageRating
		ratingsCount
		createdAt
		updatedAt
	}
}
`

func GetBook(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
) (data_ *GetBookResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetBook",
		Query:  GetBook_Operation,
		Variables: &__GetBookInput{
			Id: id,
		},
	}

	data_ = &GetBookResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetCurrentUser.
const GetCurrentUser_Operation = `
query GetCurrentUser {
	me {
		id
		username
		email
		createdAt
		updatedAt
	}
}
`

func GetCurrentUser(
	ctx_ context.Context,
	client_ graphql.Client,
) (data_ *GetCurrentUserResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetCurrentUser",
		Query:  GetCurrentUser_Operation,
	}

	data_ = &GetCurrentUserResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by SearchBooks.
const SearchBooks_Operation = `
query SearchBooks ($query: String!) {
	search(query: $query, type: BOOKS) {
		__typename
		... on BookSearchResults {
			totalCount
			results {
				... on Book {
					id
					title
					slug
					isbn
					publicationYear
					pageCount
					cached_contributors {
						name
						role
					}
					cached_genres {
						name
					}
					image
					averageRating
					ratingsCount
				}
			}
		}
	}
}
`

func SearchBooks(
	ctx_ context.Context,
	client_ graphql.Client,
	query string,
) (data_ *SearchBooksResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "SearchBooks",
		Query:  SearchBooks_Operation,
		Variables: &__SearchBooksInput{
			Query: query,
		},
	}

	data_ = &SearchBooksResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}
