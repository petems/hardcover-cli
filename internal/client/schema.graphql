scalar ID
scalar String
scalar Int
scalar Float
scalar Boolean

type Query {
  me: User
  book(id: ID!): Book
  search(query: String!, type: SearchType): SearchResults
}

type User {
  id: ID!
  username: String!
  email: String!
  createdAt: String!
  updatedAt: String!
}

type Book {
  id: ID!
  title: String!
  description: String
  slug: String!
  isbn: String
  publicationYear: Int
  pageCount: Int
  cached_contributors: [Contributor!]!
  cached_genres: [Genre!]!
  image: String
  averageRating: Float
  ratingsCount: Int
  createdAt: String!
  updatedAt: String!
}

type Contributor {
  name: String!
  role: String!
}

type Genre {
  name: String!
}

enum SearchType {
  BOOKS
  AUTHORS
  USERS
}

union SearchResults = BookSearchResults | AuthorSearchResults | UserSearchResults

type BookSearchResults {
  totalCount: Int!
  results: [Book!]!
}

type AuthorSearchResults {
  totalCount: Int!
  results: [Author!]!
}

type UserSearchResults {
  totalCount: Int!
  results: [User!]!
}

type Author {
  id: ID!
  name: String!
}
